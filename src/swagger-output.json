{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Todo Apis",
    "description": "API for Managing todo calls",
    "contact": {
      "name": "API Support",
      "email": "tiwariankit496@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "tags": [
    {
      "name": "TODO CRUD",
      "description": "TODO related apis"
    },
    {
      "name": "Todo",
      "description": "Todo App"
    }
  ],
  "securityDefinitions": {},
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "todoResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Success"
          }
        }
      },
      "errorResponse.400": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "The request was malformed or invalid. Please check the request parameters."
          }
        }
      },
      "errorResponse.401": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 401
          },
          "message": {
            "type": "string",
            "example": "Authentication failed or user lacks proper authorization."
          }
        }
      },
      "errorResponse.403": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 403
          },
          "message": {
            "type": "string",
            "example": "You do not have permission to access this resource."
          }
        }
      },
      "errorResponse.404": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "404"
          },
          "message": {
            "type": "string",
            "example": "The requested resource could not be found on the server."
          }
        }
      },
      "errorResponse.500": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 500
          },
          "message": {
            "type": "string",
            "example": "An unexpected error occurred on the server. Please try again later."
          }
        }
      }
    }
  }
}